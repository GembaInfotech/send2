{"version":3,"file":"static/js/123.967a4860.chunk.js","mappings":"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","sources":["components/profile/TrustedDevicesLocations.jsx","components/profile/PrimaryDevicesLocations.jsx","components/profile/BlockedDevicesLocations.jsx","pages/DevicesLocations.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getTrustedContextAuthDataAction,\n  deleteContextAuthDataAction,\n  getBlockedAuthContextDataAction,\n  blockContextAuthDataAction,\n} from \"../../redux/actions/authActions\";\nimport LoadingSpinner from \"../loader/ButtonLoadingSpinner\";\n\nconst TrustedDevicesLocations = ({ trustedAuthContextData }) => {\n  const [deleteLoading, setDeleteLoading] = useState({});\n  const [blockLoading, setBlockLoading] = useState({});\n  const dispatch = useDispatch();\n\n  const handleDelete = async (contextId) => {\n    setDeleteLoading((prevState) => ({\n      ...prevState,\n      [contextId]: true,\n    }));\n\n    await dispatch(deleteContextAuthDataAction(contextId));\n    await dispatch(getTrustedContextAuthDataAction());\n\n    setDeleteLoading((prevState) => ({\n      ...prevState,\n      [contextId]: false,\n    }));\n  };\n\n  const handleBlock = async (contextId) => {\n    setBlockLoading((prevState) => ({\n      ...prevState,\n      [contextId]: true,\n    }));\n\n    await dispatch(blockContextAuthDataAction(contextId));\n    await dispatch(getTrustedContextAuthDataAction());\n    await dispatch(getBlockedAuthContextDataAction());\n\n    setBlockLoading((prevState) => ({\n      ...prevState,\n      [contextId]: false,\n    }));\n  };\n\n  const trustedDevices = trustedAuthContextData?.map((device) => ({\n    _id: device._id,\n    device: device.device,\n    deviceType: device.deviceType,\n    ipAddress: device.ip,\n    location: `${device.city}, ${device.country}`,\n    browser: device.browser,\n    operatingSystem: device.os,\n    time: device.time,\n  }));\n\n  return (\n    <div className=\"max-w-3xl mx-auto mt-12 p-5\">\n      <h2 className=\"text-lg font-medium text-gray-900\">\n        Trusted Devices and Locations\n      </h2>\n      <div className=\"mt-6 border-t border-gray-200 pt-6\">\n        <div className=\"flow-root\">\n          <ul className=\"-my-5 divide-y divide-gray-200\">\n            {trustedDevices.length === 0 && (\n              <span className=\"text-sm font-medium text-gray-900\">\n                Not available\n              </span>\n            )}\n\n            {trustedDevices.map((device) => (\n              <li key={device._id} className=\"py-5\">\n                <div className=\"flex items-center justify-between space-x-4\">\n                  <div className=\"min-w-0 flex-1\">\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-900\">\n                        {device.device} {device.deviceType} - {device.time}\n                      </span>\n\n                      <span className=\"ml-1 text-sm text-gray-500\">\n                        ({device.ipAddress})\n                      </span>\n                    </div>\n                    <div className=\"mt-1 flex items-center space-x-4\">\n                      <span className=\"text-sm text-gray-500\">\n                        {device.location}\n                      </span>\n                      <span className=\"text-sm text-gray-500\">â€¢</span>\n                      <span className=\"text-sm text-gray-500\">\n                        {device.browser} on {device.operatingSystem}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"flex-shrink-0\">\n                    <button\n                      disabled={deleteLoading[device._id]}\n                      onClick={() => handleDelete(device._id)}\n                      type=\"button\"\n                      className=\"mx-3 inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n                    >\n                      {deleteLoading[device._id] ? (\n                        <LoadingSpinner loadingText={\"Removing...\"} />\n                      ) : (\n                        <span>Remove</span>\n                      )}\n                    </button>\n                    <button\n                      disabled={blockLoading[device._id]}\n                      onClick={() => handleBlock(device._id)}\n                      type=\"button\"\n                      className=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-gray-400 hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300\"\n                    >\n                      {blockLoading[device._id] ? (\n                        <LoadingSpinner loadingText={\"Blocking...\"} />\n                      ) : (\n                        <span>Block</span>\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TrustedDevicesLocations;\n","const PrimaryDevicesLocations = ({ contextAuthData }) => {\n  const primaryDevice = {\n    \"First Added\": contextAuthData?.firstAdded,\n    \"IP Address\": contextAuthData?.ip,\n    Country: contextAuthData?.country,\n    City: contextAuthData?.city,\n    Browser: contextAuthData?.browser,\n    Platform: contextAuthData?.platform,\n    OS: contextAuthData?.os,\n    Device: contextAuthData?.device,\n    \"Device Type\": contextAuthData?.deviceType,\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n      <div className=\"max-w-3xl mx-auto\">\n        <h2 className=\"text-lg font-medium text-gray-900\">\n          Primary Devices and Locations\n        </h2>\n\n        <div className=\"mt-6 border-t border-gray-200 pt-6\">\n          <dl className=\"grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2\">\n            {Object.entries(primaryDevice).map(([key, value]) => (\n              <div key={key} className=\"sm:col-span-1\">\n                <dt className=\"text-sm font-medium text-gray-500\">{key}</dt>\n                <dd className=\"mt-1 text-sm text-gray-900\">{value}</dd>\n              </div>\n            ))}\n          </dl>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PrimaryDevicesLocations;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getTrustedContextAuthDataAction,\n  getBlockedAuthContextDataAction,\n  unblockContextAuthDataAction,\n} from \"../../redux/actions/authActions\";\nimport LoadingSpinner from \"../loader/ButtonLoadingSpinner\";\n\nconst BlockedDevicesLocations = ({ blockedContextAuthData }) => {\n  const [loading, setLoading] = useState({});\n  const dispatch = useDispatch();\n\n  const handleUnblock = async (contextId) => {\n    setLoading((prevState) => ({\n      ...prevState,\n      [contextId]: true,\n    }));\n\n    await dispatch(unblockContextAuthDataAction(contextId));\n    await dispatch(getBlockedAuthContextDataAction());\n    await dispatch(getTrustedContextAuthDataAction());\n\n    setLoading((prevState) => ({\n      ...prevState,\n      [contextId]: false,\n    }));\n  };\n\n  const blockedDevices = blockedContextAuthData?.map((device) => ({\n    _id: device._id,\n    device: device.device,\n    deviceType: device.deviceType,\n    ipAddress: device.ip,\n    location: `${device.city}, ${device.country}`,\n    browser: device.browser,\n    operatingSystem: device.os,\n    time: device.time,\n  }));\n\n  return (\n    <div className=\"max-w-3xl mx-auto mt-12 p-5\">\n      <h2 className=\"text-lg font-medium text-gray-900\">\n        Blocked Devices and Locations\n      </h2>\n      <div className=\"mt-6 border-t border-gray-200 pt-6\">\n        <div className=\"flow-root\">\n          <ul className=\"-my-5 divide-y divide-gray-200\">\n            {blockedDevices.length === 0 && (\n              <span className=\"text-sm font-medium text-gray-900\">\n                Not available\n              </span>\n            )}\n            {blockedDevices.map((device) => (\n              <li key={device._id} className=\"py-5\">\n                <div className=\"flex items-center justify-between space-x-4\">\n                  <div className=\"min-w-0 flex-1\">\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-900\">\n                        {device.device} {device.deviceType} - {device.time}\n                      </span>\n\n                      <span className=\"ml-1 text-sm text-gray-500\">\n                        ({device.ipAddress})\n                      </span>\n                    </div>\n                    <div className=\"mt-1 flex items-center space-x-4\">\n                      <span className=\"text-sm text-gray-500\">\n                        {device.location}\n                      </span>\n                      <span className=\"text-sm text-gray-500\">â€¢</span>\n                      <span className=\"text-sm text-gray-500\">\n                        {device.browser} on {device.operatingSystem}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"flex-shrink-0\">\n                    <button\n                      disabled={loading[device._id]}\n                      onClick={() => handleUnblock(device._id)}\n                      type=\"button\"\n                      className={`inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white ${\n                        loading[device._id]\n                          ? \"bg-gray-400 cursor-not-allowed\"\n                          : \"bg-blue-500 hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\"\n                      }`}\n                    >\n                      {loading[device._id] ? (\n                        <LoadingSpinner loadingText={\"unblocking...\"} />\n                      ) : (\n                        \"Unblock\"\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlockedDevicesLocations;\n","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport TrustedDevicesLocations from \"../components/profile/TrustedDevicesLocations\";\nimport PrimaryDevicesLocations from \"../components/profile/PrimaryDevicesLocations\";\nimport BlockedDevicesLocations from \"../components/profile/BlockedDevicesLocations\";\nimport CommonLoading from \"../components/loader/CommonLoading\";\n\nimport {\n  getTrustedContextAuthDataAction,\n  getUserPreferencesAction,\n  getBlockedAuthContextDataAction,\n  getContextAuthDataAction,\n} from \"../redux/actions/authActions\";\n\nconst DevicesLocations = () => {\n  const dispatch = useDispatch();\n  const [dateFetched, setDateFetched] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await dispatch(getUserPreferencesAction());\n      await dispatch(getContextAuthDataAction());\n      await dispatch(getTrustedContextAuthDataAction());\n      await dispatch(getBlockedAuthContextDataAction());\n    };\n    fetchData().then(() => setDateFetched(true));\n  }, [dispatch, dateFetched]);\n\n  const userPreferences = useSelector((state) => state.auth?.userPreferences);\n  const contextAuthData = useSelector((state) => state.auth?.contextAuthData);\n  const trustedAuthContextData = useSelector(\n    (state) => state.auth?.trustedAuthContextData\n  );\n  const blockedContextAuthData = useSelector(\n    (state) => state.auth?.blockedAuthContextData\n  );\n\n  if (!dateFetched) {\n    return (\n      <div className=\"col-span-2 flex items-center justify-center h-screen\">\n        <CommonLoading />\n      </div>\n    );\n  }\n\n  if (!userPreferences || !contextAuthData) {\n    return (\n      <div className=\"bg-white border p-5 text-gray-700 text-center main-section\">\n        <p className=\"text-lg font-semibold mb-4\">\n          Context-based authentication is currently disabled for your account.\n        </p>\n        <p className=\"text-sm\">\n          By enabling context-based authentication, you will gain control over\n          your devices, their locations, and manage trusted and blocked devices.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"main-section border bg-white\">\n      <PrimaryDevicesLocations contextAuthData={contextAuthData} />\n\n      <TrustedDevicesLocations\n        trustedAuthContextData={trustedAuthContextData}\n      />\n      <BlockedDevicesLocations\n        blockedContextAuthData={blockedContextAuthData}\n      />\n    </div>\n  );\n};\n\nexport default DevicesLocations;\n"],"names":["_ref","trustedAuthContextData","deleteLoading","setDeleteLoading","useState","blockLoading","setBlockLoading","dispatch","useDispatch","trustedDevices","map","device","_id","deviceType","ipAddress","ip","location","concat","city","country","browser","operatingSystem","os","time","_jsxs","className","children","_jsx","length","disabled","onClick","async","prevState","contextId","deleteContextAuthDataAction","getTrustedContextAuthDataAction","handleDelete","type","LoadingSpinner","loadingText","blockContextAuthDataAction","getBlockedAuthContextDataAction","handleBlock","contextAuthData","primaryDevice","firstAdded","Country","City","Browser","Platform","platform","OS","Device","Object","entries","_ref2","key","value","blockedContextAuthData","loading","setLoading","blockedDevices","unblockContextAuthDataAction","handleUnblock","DevicesLocations","dateFetched","setDateFetched","useEffect","getUserPreferencesAction","getContextAuthDataAction","fetchData","then","userPreferences","useSelector","state","_state$auth","auth","_state$auth2","_state$auth3","_state$auth4","blockedAuthContextData","PrimaryDevicesLocations","TrustedDevicesLocations","BlockedDevicesLocations","CommonLoading"],"sourceRoot":""}